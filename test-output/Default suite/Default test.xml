<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-LP" failures="1" tests="99" name="Default test" time="2477.715" errors="0" timestamp="2023-09-17T21:50:56 IST">
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="0.03">
    <failure type="org.openqa.selenium.WebDriverException" message="disconnected: not connected to DevTools
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=117.0.5938.62)
Build info: version: &amp;apos;3.141.0&amp;apos;, revision: &amp;apos;2ecb7d9a&amp;apos;, time: &amp;apos;2018-10-31T20:09:30&amp;apos;
System info: host: &amp;apos;DESKTOP-LP&amp;apos;, ip: &amp;apos;192.168.208.1&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;20&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 117.0.5938.62, chrome: {chromedriverVersion: 117.0.5938.88 (be6afae47212..., userDataDir: C:\Users\SNEHAL~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:57952}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 5f7ef0880e1fa1532bc652160ccd040f">
      <![CDATA[org.openqa.selenium.WebDriverException: disconnected: not connected to DevTools
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=117.0.5938.62)
Build info: version: '3.141.0', revision: '2ecb7d9a', time: '2018-10-31T20:09:30'
System info: host: 'DESKTOP-LP', ip: '192.168.208.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '20'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 117.0.5938.62, chrome: {chromedriverVersion: 117.0.5938.88 (be6afae47212..., userDataDir: C:\Users\SNEHAL~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:57952}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 5f7ef0880e1fa1532bc652160ccd040f
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.close(RemoteWebDriver.java:442)
at litigationAdditionalOwner.performer.Close(performer.java:1408)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655335E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655344E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655346E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655353E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655356E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655365E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655368E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655376E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655378E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655391E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655393E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655401E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655403E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655441E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655443E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655447E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655449E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655455E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655459E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655477E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655479E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655486E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655489E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655502E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655505E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655513E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655516E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655525E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655532E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655538E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.69496765554E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655558E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655562E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655594E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655596E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655603E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655606E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655612E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655614E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655625E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655628E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655641E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655643E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.69496765565E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655652E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655659E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655662E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655668E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.69496765567E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655683E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655685E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655694E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655696E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655699E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655701E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.69496765571E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655711E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655717E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655725E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655733E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655735E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655741E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655742E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655746E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655748E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655753E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655755E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655761E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655784E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655789E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655791E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655794E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655798E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655802E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655805E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655815E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655816E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.69496765583E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655841E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655849E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.69496765585E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.69496765589E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655893E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655922E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655924E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655929E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655934E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.69496765594E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655942E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655951E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655953E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655958E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.69496765596E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655966E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655968E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655974E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655977E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655982E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967655984E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967655991E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656007E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656008E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656014E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656015E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656019E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656021E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656026E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656028E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656032E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656034E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656045E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.69496765605E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656057E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656059E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.69496765607E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656072E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.69496765608E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656083E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656086E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656089E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656095E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656097E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656106E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656108E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656113E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656117E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656121E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656123E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656126E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656127E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.69496765613E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656135E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656139E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.69496765614E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656145E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.69496765615E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656157E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656159E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656175E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656177E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656181E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656182E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656187E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656191E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656199E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656201E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.69496765621E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656213E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656216E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656217E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656221E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656222E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656227E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656228E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656241E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656243E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656245E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656247E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.69496765625E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656251E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656258E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.69496765626E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656265E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656267E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.69496765627E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656273E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656276E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656278E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656281E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="@BeforeMethod Login" time="-1.694967656282E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod Login -->
  <testcase classname="litigationAdditionalOwner.performer" name="@AfterMethod Close" time="-1.694967656286E9">
    <skipped/>
  </testcase> <!-- @AfterMethod Close -->
  <testcase classname="litigationAdditionalOwner.performer" name="NoticeOpen" time="164.326"/>
  <testcase classname="litigationAdditionalOwner.performer" name="NoticeWithExistingData" time="135.244"/>
  <testcase classname="litigationAdditionalOwner.performer" name="NoticeWithInvalidData" time="115.204"/>
  <testcase classname="litigationAdditionalOwner.performer" name="NoticeWithTwoMandatoryData" time="40.415"/>
  <testcase classname="litigationAdditionalOwner.performer" name="NoticeWithEmptyFields" time="29.505"/>
  <testcase classname="litigationAdditionalOwner.performer" name="NoticeClearBtn" time="41.344"/>
  <testcase classname="litigationAdditionalOwner.performer" name="NoticeSendMailWithDoc" time="51.347"/>
  <testcase classname="litigationAdditionalOwner.performer" name="NoticeSendMailWithDocInvalidFields" time="49.765"/>
  <testcase classname="litigationAdditionalOwner.performer" name="NoticeSendMailWithDocEmptyFields" time="41.663"/>
  <testcase classname="litigationAdditionalOwner.performer" name="NoticeUserAssignment" time="47.651"/>
  <testcase classname="litigationAdditionalOwner.performer" name="NoticeDeleteUserAssignment" time="22.133"/>
  <testcase classname="litigationAdditionalOwner.performer" name="CaseOpen" time="199.673"/>
  <testcase classname="litigationAdditionalOwner.performer" name="CaseExistingData" time="1297.909">
    <failure type="org.openqa.selenium.WebDriverException" message="disconnected: Unable to receive message from renderer
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=117.0.5938.62)
Build info: version: &amp;apos;3.141.0&amp;apos;, revision: &amp;apos;2ecb7d9a&amp;apos;, time: &amp;apos;2018-10-31T20:09:30&amp;apos;
System info: host: &amp;apos;DESKTOP-LP&amp;apos;, ip: &amp;apos;192.168.208.1&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;20&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 117.0.5938.62, chrome: {chromedriverVersion: 117.0.5938.88 (be6afae47212..., userDataDir: C:\Users\SNEHAL~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:57952}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 5f7ef0880e1fa1532bc652160ccd040f">
      <![CDATA[org.openqa.selenium.WebDriverException: disconnected: Unable to receive message from renderer
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=117.0.5938.62)
Build info: version: '3.141.0', revision: '2ecb7d9a', time: '2018-10-31T20:09:30'
System info: host: 'DESKTOP-LP', ip: '192.168.208.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '20'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 117.0.5938.62, chrome: {chromedriverVersion: 117.0.5938.88 (be6afae47212..., userDataDir: C:\Users\SNEHAL~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:57952}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 5f7ef0880e1fa1532bc652160ccd040f
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:106)
at litigationAdditionalOwner.MethodsPOM.clickCaseCourt(MethodsPOM.java:1612)
at litigationAdditionalOwner.MethodsPOM.CaseExistingData(MethodsPOM.java:16651)
at litigationAdditionalOwner.performer.CaseExistingData(performer.java:235)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- CaseExistingData -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseWithInvalidData" time="0.0">
    <skipped/>
  </testcase> <!-- CaseWithInvalidData -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseWithTwoFieldsData" time="0.0">
    <skipped/>
  </testcase> <!-- CaseWithTwoFieldsData -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseWithEmptyFields" time="0.0">
    <skipped/>
  </testcase> <!-- CaseWithEmptyFields -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseWithClearBtn" time="0.0">
    <skipped/>
  </testcase> <!-- CaseWithClearBtn -->
  <testcase classname="litigationAdditionalOwner.performer" name="CloseNotice" time="0.0">
    <skipped/>
  </testcase> <!-- CloseNotice -->
  <testcase classname="litigationAdditionalOwner.performer" name="CloseCase" time="0.0">
    <skipped/>
  </testcase> <!-- CloseCase -->
  <testcase classname="litigationAdditionalOwner.performer" name="LinkNotice" time="0.0">
    <skipped/>
  </testcase> <!-- LinkNotice -->
  <testcase classname="litigationAdditionalOwner.performer" name="LinkNoticeViewIcon" time="0.0">
    <skipped/>
  </testcase> <!-- LinkNoticeViewIcon -->
  <testcase classname="litigationAdditionalOwner.performer" name="LinkNoticeDeleteIcon" time="0.0">
    <skipped/>
  </testcase> <!-- LinkNoticeDeleteIcon -->
  <testcase classname="litigationAdditionalOwner.performer" name="LinkCase" time="0.0">
    <skipped/>
  </testcase> <!-- LinkCase -->
  <testcase classname="litigationAdditionalOwner.performer" name="LinkCaseViewIcon" time="0.0">
    <skipped/>
  </testcase> <!-- LinkCaseViewIcon -->
  <testcase classname="litigationAdditionalOwner.performer" name="LinkCaseDeleteIcon" time="0.0">
    <skipped/>
  </testcase> <!-- LinkCaseDeleteIcon -->
  <testcase classname="litigationAdditionalOwner.performer" name="NoticeClosed" time="0.0">
    <skipped/>
  </testcase> <!-- NoticeClosed -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseClose" time="0.0">
    <skipped/>
  </testcase> <!-- CaseClose -->
  <testcase classname="litigationAdditionalOwner.performer" name="TaskOpen" time="0.0">
    <skipped/>
  </testcase> <!-- TaskOpen -->
  <testcase classname="litigationAdditionalOwner.performer" name="TaskClosed" time="0.0">
    <skipped/>
  </testcase> <!-- TaskClosed -->
  <testcase classname="litigationAdditionalOwner.performer" name="NoticeDocumentTab" time="0.0">
    <skipped/>
  </testcase> <!-- NoticeDocumentTab -->
  <testcase classname="litigationAdditionalOwner.performer" name="NoticeWithoutUploadDocument" time="0.0">
    <skipped/>
  </testcase> <!-- NoticeWithoutUploadDocument -->
  <testcase classname="litigationAdditionalOwner.performer" name="NoticeDocumentSearchFields" time="0.0">
    <skipped/>
  </testcase> <!-- NoticeDocumentSearchFields -->
  <testcase classname="litigationAdditionalOwner.performer" name="NoticeDocumentShareInvalidData" time="0.0">
    <skipped/>
  </testcase> <!-- NoticeDocumentShareInvalidData -->
  <testcase classname="litigationAdditionalOwner.performer" name="NoticeDocumentShareWithoutData" time="0.0">
    <skipped/>
  </testcase> <!-- NoticeDocumentShareWithoutData -->
  <testcase classname="litigationAdditionalOwner.performer" name="NoticeDocumentShareCloseBtn" time="0.0">
    <skipped/>
  </testcase> <!-- NoticeDocumentShareCloseBtn -->
  <testcase classname="litigationAdditionalOwner.performer" name="NoticeTaskActivityTab" time="0.0">
    <skipped/>
  </testcase> <!-- NoticeTaskActivityTab -->
  <testcase classname="litigationAdditionalOwner.performer" name="TaskActivtityDeleteResponse" time="0.0">
    <skipped/>
  </testcase> <!-- TaskActivtityDeleteResponse -->
  <testcase classname="litigationAdditionalOwner.performer" name="TaskActivtityExistingData" time="0.0">
    <skipped/>
  </testcase> <!-- TaskActivtityExistingData -->
  <testcase classname="litigationAdditionalOwner.performer" name="TaskActivtityWithoutData" time="0.0">
    <skipped/>
  </testcase> <!-- TaskActivtityWithoutData -->
  <testcase classname="litigationAdditionalOwner.performer" name="TaskActivtityResponseWithoutStatus" time="0.0">
    <skipped/>
  </testcase> <!-- TaskActivtityResponseWithoutStatus -->
  <testcase classname="litigationAdditionalOwner.performer" name="TaskActivtityResponseClearBtn" time="0.0">
    <skipped/>
  </testcase> <!-- TaskActivtityResponseClearBtn -->
  <testcase classname="litigationAdditionalOwner.performer" name="NoticeResponseTab" time="0.0">
    <skipped/>
  </testcase> <!-- NoticeResponseTab -->
  <testcase classname="litigationAdditionalOwner.performer" name="ResponseExistingData" time="0.0">
    <skipped/>
  </testcase> <!-- ResponseExistingData -->
  <testcase classname="litigationAdditionalOwner.performer" name="NoticeResponseWithoutData" time="0.0">
    <skipped/>
  </testcase> <!-- NoticeResponseWithoutData -->
  <testcase classname="litigationAdditionalOwner.performer" name="ResponseClearBtn" time="0.0">
    <skipped/>
  </testcase> <!-- ResponseClearBtn -->
  <testcase classname="litigationAdditionalOwner.performer" name="NoticePaymentLogTab" time="0.0">
    <skipped/>
  </testcase> <!-- NoticePaymentLogTab -->
  <testcase classname="litigationAdditionalOwner.performer" name="PaymentLogwithExistingData" time="0.0">
    <skipped/>
  </testcase> <!-- PaymentLogwithExistingData -->
  <testcase classname="litigationAdditionalOwner.performer" name="NoticePaymentWithoutData" time="0.0">
    <skipped/>
  </testcase> <!-- NoticePaymentWithoutData -->
  <testcase classname="litigationAdditionalOwner.performer" name="NoticeAuditLogTab" time="0.0">
    <skipped/>
  </testcase> <!-- NoticeAuditLogTab -->
  <testcase classname="litigationAdditionalOwner.performer" name="NoticeDocViewandDownload" time="0.0">
    <skipped/>
  </testcase> <!-- NoticeDocViewandDownload -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseDocumentTab" time="0.0">
    <skipped/>
  </testcase> <!-- CaseDocumentTab -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseWithoutUploadDocument" time="0.0">
    <skipped/>
  </testcase> <!-- CaseWithoutUploadDocument -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseDocumentEmptyFields" time="0.0">
    <skipped/>
  </testcase> <!-- CaseDocumentEmptyFields -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseDocumentSearchFields" time="0.0">
    <skipped/>
  </testcase> <!-- CaseDocumentSearchFields -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseDocumentShareInvalidData" time="0.0">
    <skipped/>
  </testcase> <!-- CaseDocumentShareInvalidData -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseDocumentShareWithoutData" time="0.0">
    <skipped/>
  </testcase> <!-- CaseDocumentShareWithoutData -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseDocumentShareCloseBtn" time="0.0">
    <skipped/>
  </testcase> <!-- CaseDocumentShareCloseBtn -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseSendMailWithDoc" time="0.0">
    <skipped/>
  </testcase> <!-- CaseSendMailWithDoc -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseSendMailWithDocInvalidFields" time="0.0">
    <skipped/>
  </testcase> <!-- CaseSendMailWithDocInvalidFields -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseSendMailWithEmptyFields" time="0.0">
    <skipped/>
  </testcase> <!-- CaseSendMailWithEmptyFields -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseTaskActivityTab" time="0.0">
    <skipped/>
  </testcase> <!-- CaseTaskActivityTab -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseTaskActivityWithoutData" time="0.0">
    <skipped/>
  </testcase> <!-- CaseTaskActivityWithoutData -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseTaskActivitywithExistingData" time="0.0">
    <skipped/>
  </testcase> <!-- CaseTaskActivitywithExistingData -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseTaskActivtityResponseWithoutStatus" time="0.001">
    <skipped/>
  </testcase> <!-- CaseTaskActivtityResponseWithoutStatus -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseTaskActivtityResponseClearBtn" time="0.0">
    <skipped/>
  </testcase> <!-- CaseTaskActivtityResponseClearBtn -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseHearingTab" time="0.0">
    <skipped/>
  </testcase> <!-- CaseHearingTab -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseExistingHearingData" time="0.0">
    <skipped/>
  </testcase> <!-- CaseExistingHearingData -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseWithoutHearingData" time="0.0">
    <skipped/>
  </testcase> <!-- CaseWithoutHearingData -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseHearingInvalidDate" time="0.0">
    <skipped/>
  </testcase> <!-- CaseHearingInvalidDate -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseHearingClearBtn" time="0.0">
    <skipped/>
  </testcase> <!-- CaseHearingClearBtn -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseOrderTab" time="0.0">
    <skipped/>
  </testcase> <!-- CaseOrderTab -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseOrderExistingData" time="0.0">
    <skipped/>
  </testcase> <!-- CaseOrderExistingData -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseOrderWithoutData" time="0.0">
    <skipped/>
  </testcase> <!-- CaseOrderWithoutData -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseOrderwithClearBtn" time="0.0">
    <skipped/>
  </testcase> <!-- CaseOrderwithClearBtn -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseAdvocateBillTab" time="0.0">
    <skipped/>
  </testcase> <!-- CaseAdvocateBillTab -->
  <testcase classname="litigationAdditionalOwner.performer" name="StatusPayment" time="0.0">
    <skipped/>
  </testcase> <!-- StatusPayment -->
  <testcase classname="litigationAdditionalOwner.performer" name="StatusPaymentWithExistingData" time="0.0">
    <skipped/>
  </testcase> <!-- StatusPaymentWithExistingData -->
  <testcase classname="litigationAdditionalOwner.performer" name="StatusPaymentWithoutdata" time="0.0">
    <skipped/>
  </testcase> <!-- StatusPaymentWithoutdata -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseStatuswithEmptyFields" time="0.0">
    <skipped/>
  </testcase> <!-- CaseStatuswithEmptyFields -->
  <testcase classname="litigationAdditionalOwner.performer" name="ExternalLawyer" time="0.0">
    <skipped/>
  </testcase> <!-- ExternalLawyer -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseExternalLawyerCriteria" time="0.0">
    <skipped/>
  </testcase> <!-- CaseExternalLawyerCriteria -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseExistingCriteria" time="0.0">
    <skipped/>
  </testcase> <!-- CaseExistingCriteria -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseCriteriaInvalidData" time="0.0">
    <skipped/>
  </testcase> <!-- CaseCriteriaInvalidData -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseCriteriaWithoutData" time="0.0">
    <skipped/>
  </testcase> <!-- CaseCriteriaWithoutData -->
  <testcase classname="litigationAdditionalOwner.performer" name="Auditlog" time="0.0">
    <skipped/>
  </testcase> <!-- Auditlog -->
  <testcase classname="litigationAdditionalOwner.performer" name="MyDocument" time="0.0">
    <skipped/>
  </testcase> <!-- MyDocument -->
  <testcase classname="litigationAdditionalOwner.performer" name="ShareCaseDocument" time="0.0">
    <skipped/>
  </testcase> <!-- ShareCaseDocument -->
  <testcase classname="litigationAdditionalOwner.performer" name="ShareNoticeDocument" time="0.0">
    <skipped/>
  </testcase> <!-- ShareNoticeDocument -->
  <testcase classname="litigationAdditionalOwner.performer" name="ShareTaskDocument" time="0.0">
    <skipped/>
  </testcase> <!-- ShareTaskDocument -->
  <testcase classname="litigationAdditionalOwner.performer" name="MyReports" time="0.0">
    <skipped/>
  </testcase> <!-- MyReports -->
  <testcase classname="litigationAdditionalOwner.performer" name="MoreReports" time="0.0">
    <skipped/>
  </testcase> <!-- MoreReports -->
  <testcase classname="litigationAdditionalOwner.performer" name="MyReminder" time="0.0">
    <skipped/>
  </testcase> <!-- MyReminder -->
  <testcase classname="litigationAdditionalOwner.performer" name="ImportUtility" time="0.0">
    <skipped/>
  </testcase> <!-- ImportUtility -->
  <testcase classname="litigationAdditionalOwner.performer" name="AdvancedSearchworkspace" time="0.0">
    <skipped/>
  </testcase> <!-- AdvancedSearchworkspace -->
  <testcase classname="litigationAdditionalOwner.performer" name="AdvancedSearchDoc" time="0.0">
    <skipped/>
  </testcase> <!-- AdvancedSearchDoc -->
  <testcase classname="litigationAdditionalOwner.performer" name="AdvancedSearch" time="0.0">
    <skipped/>
  </testcase> <!-- AdvancedSearch -->
  <testcase classname="litigationAdditionalOwner.performer" name="AdvocateBill" time="0.0">
    <skipped/>
  </testcase> <!-- AdvocateBill -->
  <testcase classname="litigationAdditionalOwner.performer" name="AdvocateBill1" time="0.0">
    <skipped/>
  </testcase> <!-- AdvocateBill1 -->
  <testcase classname="litigationAdditionalOwner.performer" name="CaseHearing" time="0.0">
    <skipped/>
  </testcase> <!-- CaseHearing -->
</testsuite> <!-- Default test -->
